Virtual Memory is a storage allocation scheme in which secondary memory can be addressed as though it were part of the main memory. The addresses a program may use to
reference memory are distinguished from the addresses the memory system uses to identify physical storage sites, and program-generated addresses are translated automatically 
to the corresponding machine addresses. 
The size of virtual storage is limited by the addressing scheme of the computer system and the amount of secondary memory is available not by the actual number of the main 
storage locations. 
It is a technique that is implemented using both hardware and software. It maps memory addresses used by a program, called virtual addresses, into physical addresses in 
computer memory. 
All memory references within a process are logical addresses that are dynamically translated into physical addresses at run time. This means that a process can be swapped in 
and out of the main memory such that it occupies different places in the main memory at different times during the course of execution.
A process may be broken into a number of pieces and these pieces need not be continuously located in the main memory during execution. The combination of dynamic run-time 
address translation and use of page or segment table permits this.
If these characteristics are present then, it is not necessary that all the pages or segments are present in the main memory during execution. This means that the required 
pages need to be loaded into memory whenever required. Virtual memory is implemented using Demand Paging or Demand Segmentation. 

 Demand Paging : 
The process of loading the page into memory on demand (whenever page fault occurs) is known as demand paging. 
The process includes the following steps : 

virtual_mem
If the CPU tries to refer to a page that is currently not available in the main memory, it generates an interrupt indicating a memory access fault.
The OS puts the interrupted process in a blocking state. For the execution to proceed the OS must bring the required page into the memory.
The OS will search for the required page in the logical address space.
The required page will be brought from logical address space to physical address space. The page replacement algorithms are used for the decision-making of replacing the page in physical address space.
The page table will be updated accordingly.
The signal will be sent to the CPU to continue the program execution and it will place the process back into the ready state.

Hence whenever a page fault occurs these steps are followed by the operating system and the required page is brought into memory. 

Advantages :  
More processes may be maintained in the main memory: Because we are going to load only some of the pages of any particular process, there is room for more processes. This
leads to more efficient utilization of the processor because it is more likely that at least one of the more numerous processes will be in the ready state at any particular 
time.
A process may be larger than all of the main memory: One of the most fundamental restrictions in programming is lifted. A process larger than the main memory can be executed 
because of demand paging. The OS itself loads pages of a process in the main memory as required.
It allows greater multiprogramming levels by using less of the available (primary) memory for each process.

